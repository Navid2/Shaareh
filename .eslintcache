[{"C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\index.tsx":"1","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\App.tsx":"2","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\store\\nav-modal-context.tsx":"3","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\pages\\PoemExplanationPage\\PoemExplanation.tsx":"4","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\pages\\ContributorPage\\ContributorPage.tsx":"5","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\Layout\\Layout.tsx":"6","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\pages\\HomePage\\HomePage.tsx":"7","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\PageComponent\\PageComponent.tsx":"8","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\api\\GetHomepage.tsx":"9","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\Video\\Video.tsx":"10","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\api\\GetPoem.tsx":"11","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\ExplanationSectionsContainer\\ExplanationSectionContainer.tsx":"12","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\PoemScriptBox\\PoemScriptBox.tsx":"13","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\MainHeader\\MainHeader.tsx":"14","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\HomepageIntroduction\\HompepageIntroduction.tsx":"15","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\PoemVideoExplanationExcerpt\\PoemVideoExplanationExcerpt.tsx":"16","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\Navbar\\Navbar.tsx":"17","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\NavigationModal\\NavigationModal.tsx":"18","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\Backdrop\\Backdrop.tsx":"19","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\PoemVerse\\PoemVerse.tsx":"20","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\ExplanationVideoSection\\ExplanationVideoSection.tsx":"21","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\ExplanationVideoSubsection\\ExplanationVideoSubsection.tsx":"22","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\pages\\CategoriesPage\\CategoriesPage.tsx":"23","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\CategoriesList\\CategoriesList.tsx":"24","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\CategoriesListItem\\CategoriesListItem.tsx":"25","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\helpers\\getCurrentVideoSubsection.ts":"26","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\helpers\\getCurrentVideoSection.ts":"27","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\model\\Section.ts":"28","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\api\\GetCategories.tsx":"29","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\NavigationModal\\NavigationModalItem\\NavigationModalItem.tsx":"30","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\HomepageCategoryContainer\\HomepageCategoryContainer.tsx":"31","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\HomepageCategoriesContainer\\HomepageCategoriesContainer.tsx":"32"},{"size":758,"mtime":1642053969451,"results":"33","hashOfConfig":"34"},{"size":866,"mtime":1639927721607,"results":"35","hashOfConfig":"34"},{"size":532,"mtime":1639643695426,"results":"36","hashOfConfig":"34"},{"size":8483,"mtime":1640367998066,"results":"37","hashOfConfig":"34"},{"size":419,"mtime":1639643695424,"results":"38","hashOfConfig":"34"},{"size":278,"mtime":1639643695416,"results":"39","hashOfConfig":"34"},{"size":1706,"mtime":1642242714907,"results":"40","hashOfConfig":"34"},{"size":325,"mtime":1639643695419,"results":"41","hashOfConfig":"34"},{"size":677,"mtime":1639643695403,"results":"42","hashOfConfig":"34"},{"size":1148,"mtime":1640338287999,"results":"43","hashOfConfig":"34"},{"size":3148,"mtime":1642242522657,"results":"44","hashOfConfig":"34"},{"size":2322,"mtime":1639824138294,"results":"45","hashOfConfig":"34"},{"size":1699,"mtime":1639643695419,"results":"46","hashOfConfig":"34"},{"size":1800,"mtime":1642208619611,"results":"47","hashOfConfig":"34"},{"size":549,"mtime":1642058712551,"results":"48","hashOfConfig":"34"},{"size":1028,"mtime":1642063969480,"results":"49","hashOfConfig":"34"},{"size":668,"mtime":1639643695417,"results":"50","hashOfConfig":"34"},{"size":1019,"mtime":1642241847010,"results":"51","hashOfConfig":"34"},{"size":934,"mtime":1642261304852,"results":"52","hashOfConfig":"34"},{"size":681,"mtime":1639643695420,"results":"53","hashOfConfig":"34"},{"size":2786,"mtime":1639643695414,"results":"54","hashOfConfig":"34"},{"size":1912,"mtime":1639643695415,"results":"55","hashOfConfig":"34"},{"size":825,"mtime":1642054207161,"results":"56","hashOfConfig":"34"},{"size":971,"mtime":1642057047682,"results":"57","hashOfConfig":"34"},{"size":884,"mtime":1642054285173,"results":"58","hashOfConfig":"34"},{"size":2438,"mtime":1640369283878,"results":"59","hashOfConfig":"34"},{"size":1731,"mtime":1640341315207,"results":"60","hashOfConfig":"34"},{"size":507,"mtime":1640341312606,"results":"61","hashOfConfig":"34"},{"size":653,"mtime":1642053389028,"results":"62","hashOfConfig":"34"},{"size":646,"mtime":1642210407860,"results":"63","hashOfConfig":"34"},{"size":2503,"mtime":1642243641758,"results":"64","hashOfConfig":"34"},{"size":1016,"mtime":1642243671411,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"v10v3b",{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\index.tsx",[],["139","140"],"C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\App.tsx",[],"C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\store\\nav-modal-context.tsx",[],"C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\pages\\PoemExplanationPage\\PoemExplanation.tsx",["141","142","143","144"],"// essentials\r\nimport { FC, Fragment, Ref, useRef, useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { ApolloError } from \"@apollo/client\";\r\n\r\n// css\r\nimport \"./PoemExplanation.css\";\r\n\r\n// components\r\nimport PageComponent from \"../../components/PageComponent/PageComponent\";\r\nimport ExplanationSectionContainer from \"../../components/ExplanationSectionsContainer/ExplanationSectionContainer\";\r\nimport PoemScriptBox from \"../../components/PoemScriptBox/PoemScriptBox\";\r\nimport Video from \"../../components/Video/Video\";\r\n\r\n// models\r\nimport {\r\n  RAW_SECTION_WITH_INDEX,\r\n  Section,\r\n  SectionWithIndex,\r\n} from \"../../model/Section\";\r\nimport { PoemVideoExplanation } from \"../../model/PoemVideoExplanation\";\r\n\r\n// api hook\r\nimport { useGetPoem } from \"../../api/GetPoem\";\r\n\r\n// helpers\r\nimport { getCurrentSubsectionIndex } from \"../../helpers/getCurrentVideoSubsection\";\r\nimport { getCurrentSection } from \"../../helpers/getCurrentVideoSection\";\r\n\r\n/*\r\n\r\n// dummy poem data\r\nimport { poemExplanationData as poem } from \"../../dummy-data/poem-explanation\";\r\n\r\n*/\r\n\r\nconst PoemExplanation: FC = (props) => {\r\n  console.log(\"page rerendered\");\r\n\r\n  const TIME_UPDATE_FREQUENCY_MS = 1000;\r\n\r\n  // get seconds passed from video tag\r\n  const getSecondsPassed = () => {\r\n    return (videoRef.current as HTMLVideoElement).currentTime;\r\n  };\r\n  const setSecondsPassed = (timeInSeconds: number) => {\r\n    (videoRef.current as HTMLVideoElement).currentTime = timeInSeconds;\r\n  };\r\n\r\n  // get poem id for making request\r\n  const id = useParams<{ poem_id: string }>().poem_id;\r\n\r\n  // fetching the poem\r\n  const [loading, setLoading] = useState<boolean>();\r\n  const [error, setError] = useState<ApolloError | undefined>();\r\n  const [poem, setPoem] = useState<PoemVideoExplanation | null>();\r\n\r\n  useGetPoem(id, setLoading, setError, setPoem);\r\n\r\n  // boolean value to determine if time should be updated\r\n  const [updateTime, setUpdateTime] = useState<boolean>(true);\r\n\r\n  // boolean value to determine if the video was touched\r\n  const [videoIsTouched, setVideoIsTouched] = useState<boolean>(false);\r\n\r\n  // boolean value to represent playing status of video tag\r\n  const [isPlaying, setIsPlaying] = useState<boolean>(false);\r\n\r\n  // boolean value to determine if isPlaying should be updated or not\r\n  const [updateIsPlaying, setUpdateIsPlaying] = useState<boolean>(true);\r\n\r\n  // current video section\r\n  const [currentSection, setCurrentSection] = useState<SectionWithIndex>(\r\n    RAW_SECTION_WITH_INDEX\r\n  );\r\n\r\n  // current video subsection index\r\n  const [currentSubsectionIndex, setCurrentSubsectionIndex] = useState<\r\n    number | null\r\n  >(null);\r\n\r\n  // video reference to provide us a connection to video tag\r\n  const videoRef = useRef<HTMLVideoElement>();\r\n\r\n  // set the current section when the poem was first loaded\r\n  useEffect(() => {\r\n    if (!error && !loading && poem && isPlaying) {\r\n      setCurrentSection(\r\n        getCurrentSection(\r\n          poem.videoSections ? poem.videoSections : [],\r\n          getSecondsPassed()\r\n        )\r\n      );\r\n    }\r\n  }, [error, loading, poem, isPlaying]);\r\n\r\n  // getting current subsection from seconds passed\r\n  const updaterInterval = useRef<NodeJS.Timeout>(\r\n    setInterval(() => {}, TIME_UPDATE_FREQUENCY_MS)\r\n  );\r\n  useEffect(() => {\r\n    clearInterval(updaterInterval.current);\r\n    if (isPlaying) {\r\n      updaterInterval.current = setInterval(() => {\r\n        // console.log(isPlaying ? \"is being played\":\"is paused\");\r\n        if (!loading && !error && poem && isPlaying) {\r\n          const currentSubsectionIndex = getCurrentSubsectionIndex(\r\n            poem.videoSections,\r\n            currentSection.sectionIndex,\r\n            getSecondsPassed(),\r\n            setCurrentSubsectionIndex\r\n          );\r\n          setCurrentSection(() => {\r\n            const currentSection = getCurrentSection(\r\n              poem.videoSections,\r\n              getSecondsPassed()\r\n            );\r\n            console.log(currentSection);\r\n            return currentSection;\r\n          });\r\n        }\r\n      }, TIME_UPDATE_FREQUENCY_MS);\r\n    }\r\n  }, [isPlaying]);\r\n\r\n  // safe time to add to the section/subsection starting point to update the current section and subsection correctly\r\n  const epsilonTime = 0.3;\r\n\r\n  // this handler gets executed when a verse is clicked and jumps the time to its first explanation section\r\n  const verseClickHandler = (index: number) => {\r\n    if (!videoIsTouched) {\r\n      (videoRef.current as HTMLVideoElement).play();\r\n    }\r\n    const targetVideoSection = poem?.videoSections.find(\r\n      (videoSection) =>\r\n        videoSection.verseIndex === index && videoSection.firstExplanation\r\n    );\r\n\r\n    if (targetVideoSection) {\r\n      setUpdateIsPlaying(false);\r\n      (videoRef.current as HTMLVideoElement).pause();\r\n      (videoRef.current as HTMLVideoElement).currentTime =\r\n        (targetVideoSection?.time as number) + epsilonTime;\r\n\r\n      setSecondsPassed((targetVideoSection?.time as number) + epsilonTime);\r\n      setUpdateTime(false);\r\n    }\r\n  };\r\n\r\n  // this handler gets executed whenever a section gets clicked and jumps the time to section start time\r\n  const sectionChangeHandler = (time: number) => {\r\n    if (!videoIsTouched) {\r\n      (videoRef.current as HTMLVideoElement).play();\r\n    }\r\n    (videoRef.current as HTMLVideoElement).currentTime = time + epsilonTime;\r\n    setSecondsPassed(time + epsilonTime);\r\n    setUpdateTime(false);\r\n  };\r\n\r\n  // this handler gets executed whenever video tag play button gets clicked\r\n  const playHandler = () => {\r\n    setVideoIsTouched(true);\r\n    if (updateIsPlaying) {\r\n      console.log(\"played\");\r\n      setIsPlaying(true);\r\n    }\r\n  };\r\n\r\n  // this handler gets executed whenever video tag pause button gets clicked\r\n  const pauseHandler = () => {\r\n    if (updateIsPlaying) {\r\n      console.log(\"paused\");\r\n      setIsPlaying(false);\r\n    }\r\n  };\r\n\r\n  // this handler gets executed whenever video tag is seeking the time (basically buffering the target time of video)\r\n  const videoSeekingHandler = () => {\r\n    setUpdateTime(false);\r\n  };\r\n\r\n  // this handler gets executed whenever video tag seeked and buffered successfully\r\n  const videoSeekedHandler = () => {\r\n    setUpdateIsPlaying(true);\r\n    if (isPlaying) {\r\n      (videoRef.current as HTMLVideoElement).play();\r\n    }\r\n    setUpdateTime(true);\r\n  };\r\n\r\n  // keywords text state for seo\r\n  const [keywordsText, setKeywordsText] = useState<string>(\"\");\r\n\r\n  // updates (*sets) the keywords text when poem fetched successfully\r\n  useEffect(() => {\r\n    let keywords: string[] = [];\r\n    poem?.videoSections.map((section) => {\r\n      if (!section.firstExplanation) {\r\n        keywords.push(section.title);\r\n      }\r\n      section?.subsections?.map((subsection) => {\r\n        keywords.push(subsection.title);\r\n        return null;\r\n      });\r\n      return null;\r\n    });\r\n    setKeywordsText(keywords.join(\",\"));\r\n  }, [poem]);\r\n\r\n  // jsx\r\n  return (\r\n    <PageComponent>\r\n      {poem && (\r\n        <Fragment>\r\n          <Helmet>\r\n            <title>{poem.title}</title>\r\n            <meta\r\n              name=\"description\"\r\n              content={`شرح ویدئویی شعر ${poem.title}`}\r\n            />\r\n            <meta name=\"keywords\" content={keywordsText} />\r\n          </Helmet>\r\n          <div className=\"explanation-video-and-sections\">\r\n            <ExplanationSectionContainer\r\n              className=\"poem-explanation-sections\"\r\n              videoSections={poem.videoSections}\r\n              activeSection={(currentSection as SectionWithIndex).sectionIndex}\r\n              onTimeChange={sectionChangeHandler}\r\n              currentSubsectionIndex={currentSubsectionIndex}\r\n            />\r\n            <Video\r\n              link={poem.videoURL}\r\n              className=\"poem-explanation-video\"\r\n              ref={videoRef as Ref<HTMLVideoElement>}\r\n              onPlay={playHandler}\r\n              onPause={pauseHandler}\r\n              onSeeking={videoSeekingHandler}\r\n              onSeeked={videoSeekedHandler}\r\n            />\r\n          </div>\r\n          <PoemScriptBox\r\n            onVerseClick={verseClickHandler}\r\n            activeVerseIndex={(currentSection as SectionWithIndex).verseIndex}\r\n            verses={poem.verses}\r\n            isPlaying={isPlaying}\r\n          />\r\n        </Fragment>\r\n      )}\r\n    </PageComponent>\r\n  );\r\n};\r\n\r\nexport default PoemExplanation;\r\n","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\pages\\ContributorPage\\ContributorPage.tsx",[],"C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\Layout\\Layout.tsx",[],"C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\pages\\HomePage\\HomePage.tsx",["145","146","147","148"],"import { FC } from \"react\";\r\nimport { gregorianToJalali } from \"shamsi-date-converter\";\r\n\r\nimport { useGetPoemsExcerpt } from \"../../api/GetPoem\";\r\nimport PoemVideoExplanationExcerpt from \"../../components/PoemVideoExplanationExcerpt/PoemVideoExplanationExcerpt\";\r\nimport PageComponent from \"../../components/PageComponent/PageComponent\";\r\n\r\nimport { cmsURI } from \"../..\";\r\n\r\nimport \"./HomePage.css\";\r\nimport HomepageIntroduction from \"../../components/HomepageIntroduction/HompepageIntroduction\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { useGetHomepage } from \"../../api/GetHomepage\";\r\nimport HomepageCategoryContainer from \"../../components/HomepageCategoryContainer/HomepageCategoryContainer\";\r\nimport HomepageCategoriesContainer from \"../../components/HomepageCategoriesContainer/HomepageCategoriesContainer\";\r\n\r\nconst HomePage: FC = (props) => {\r\n  const { categories } = useGetPoemsExcerpt();\r\n\r\n  console.log(categories);\r\n\r\n  const { loading, error, homepage } = useGetHomepage();\r\n\r\n  let keywords = homepage?.keywords\r\n    .map((metaKeyword) => (metaKeyword.active ? metaKeyword.keyword : null))\r\n    .filter((value) => value !== null);\r\n  const keywords_text = keywords?.join(\",\");\r\n\r\n  return (\r\n    <PageComponent className=\"home-page\">\r\n      <Helmet>\r\n        {!loading && !error && <title>{homepage?.title}</title>}\r\n        {!loading && !error && (\r\n          <meta name=\"description\" content={homepage?.description} />\r\n        )}\r\n        <meta name=\"keywords\" content={keywords_text} />\r\n      </Helmet>\r\n      <HomepageIntroduction />\r\n      {categories && <HomepageCategoriesContainer categories={categories} />}\r\n    </PageComponent>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\PageComponent\\PageComponent.tsx",[],"C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\api\\GetHomepage.tsx",[],"C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\Video\\Video.tsx",["149"],"import { BaseSyntheticEvent, forwardRef } from \"react\";\r\n\r\nimport \"./Video.css\";\r\n\r\ninterface VideoComponent {\r\n\tlink: string;\r\n\tclassName?: string;\r\n\tonPlay: () => void;\r\n\tonPause: () => void;\r\n  onSeeking?: () => void;\r\n  onSeeked?:() => void;\r\n}\r\n\r\nconst Video = forwardRef<HTMLVideoElement, VideoComponent>((props, ref) => {\r\n\treturn (\r\n\t\t<section\r\n\t\t\tclassName={`aparat-video-container${\r\n\t\t\t\tprops.className ? ` ${props.className}` : \"\"\r\n\t\t\t}`}\r\n\t\t>\r\n\t\t\t{/* <div className=\"h_iframe-aparat_embed_frame\">\r\n\t\t\t\t<span style={{ display: \"block\", paddingTop: \"57%\" }}></span>\r\n\t\t\t\t<iframe\r\n\t\t\t\t\tsrc={`https://www.aparat.com/video/video/embed/videohash/${props.link}/vt/frame?${props.time?`t=${props.time}`:``}`}\r\n\t\t\t\t\ttitle=\"video\"\r\n\t\t\t\t\tallowFullScreen={true}\r\n\t\t\t\t></iframe>\r\n\t\t\t</div> */}\r\n\t\t\t<video\r\n\t\t\t\tref={ref}\r\n        onSeeked={props.onSeeked?props.onSeeked:undefined}\r\n        onSeeking={props.onSeeking?props.onSeeking:undefined}\r\n\t\t\t\tcontrols\r\n\t\t\t\tonPlay={props.onPlay}\r\n\t\t\t\tonPause={props.onPause}\r\n\t\t\t\tplaysInline\r\n\t\t\t>\r\n\t\t\t\t<source src={props.link} type=\"video/mp4\" />\r\n\t\t\t</video>\r\n\t\t</section>\r\n\t);\r\n});\r\n\r\nexport default Video;\r\n","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\api\\GetPoem.tsx",["150","151","152"],"import { ApolloError, gql, useQuery } from \"@apollo/client\";\r\nimport { error } from \"console\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { PoemVideoExplanation } from \"../model/PoemVideoExplanation\";\r\nimport { PoemVideoExplanationExcerptCategory } from \"../model/PoemVideoExplanationExcerptCategory\";\r\nimport { Verse } from \"../model/Verse\";\r\n\r\n\r\n\r\nexport const useGetPoemsExcerpt = () => {\r\n\tconst query = gql`\r\n\t\tquery {\r\n\t\t\tpoemCategories(sort: \"updated_at:desc\", limit: 5) {\r\n\t\t\t\tid\r\n\t\t\t\ttitle\r\n\t\t\t\tpoems(sort: \"created_at:desc\", limit: 10) {\r\n\t\t\t\t\tid\r\n\t\t\t\t\ttitle\r\n\t\t\t\t\tcreated_at\r\n\t\t\t\t\tcover {\r\n\t\t\t\t\t\turl\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t`;\r\n\r\n\tconst { loading, error, data } = useQuery(query);\r\n\tconst typedData: {\r\n\t\tpoemCategories: PoemVideoExplanationExcerptCategory[];\r\n\t} = data;\r\n\r\n\tif (!loading && !error) {\r\n\t\treturn { loading, error, categories: typedData.poemCategories };\r\n\t} else {\r\n\t\treturn { loading, error, categories: null };\r\n\t}\r\n};\r\n\r\nexport const useGetPoem = (id: string,setLoading:React.Dispatch<React.SetStateAction<boolean | undefined>>,setError:React.Dispatch<React.SetStateAction<ApolloError | undefined>>,setPoem:React.Dispatch<React.SetStateAction<PoemVideoExplanation | null | undefined>>) => {\r\n\tinterface Poem {\r\n\t\tid: string;\r\n\t\ttitle: string;\r\n\t\tcreated_at: string;\r\n\t\tvideoURL: string;\r\n\t\tverses: Verse[];\r\n\t\tvideoSections: VideoSection[];\r\n\t}\r\n\tinterface VideoSection {\r\n\t\ttitle: string;\r\n\t\tdescription: string;\r\n\t\tverseIndex: number;\r\n\t\tfirstExplanation: boolean;\r\n\t\ttime: SimpleTime & number;\r\n\t\tsubsections: SubsectionWithSimpleTime[];\r\n\t}\r\n\tinterface SubsectionWithSimpleTime {\r\n\t\ttitle: string;\r\n\t\thour: number;\r\n\t\tminute: number;\r\n\t\tsecond: number;\r\n\t\ttime: number;\r\n\t}\r\n\tinterface SimpleTime {\r\n\t\thour: number;\r\n\t\tminute: number;\r\n\t\tsecond: number;\r\n\t}\r\n\tconst query = gql`\r\n\t\tquery {\r\n\t\t\tpoem(id: ${id} ) {\r\n\t\t\t\tid\r\n\t\t\t\ttitle\r\n\t\t\t\tcreated_at\r\n\t\t\t\tvideoURL\r\n\t\t\t\tverses {\r\n\t\t\t\t\themistish_1\r\n\t\t\t\t\themistish_2\r\n\t\t\t\t}\r\n\t\t\t\tvideoSections {\r\n\t\t\t\t\ttitle\r\n\t\t\t\t\tdescription\r\n\t\t\t\t\tverseIndex\r\n\t\t\t\t\tfirstExplanation\r\n\t\t\t\t\tsubsections {\r\n\t\t\t\t\t\ttitle\r\n\t\t\t\t\t\thour\r\n\t\t\t\t\t\tminute\r\n\t\t\t\t\t\tsecond\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttime {\r\n\t\t\t\t\t\thour\r\n\t\t\t\t\t\tminute\r\n\t\t\t\t\t\tsecond\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t`;\r\n\r\n\tconst { loading:_loading, error:_error, data:_data } = useQuery(query);\r\n\t\r\n\r\n\t\r\n\t\r\n\tlet typedData: PoemVideoExplanation | null = null;\r\n\tif (!_loading && !_error) {\r\n\t\tconst videoSections = (_data as { poem: Poem }).poem.videoSections.map(\r\n\t\t\t(videoSection) => {\r\n\t\t\t\tconst subsections = videoSection?.subsections?.map(\r\n\t\t\t\t\t({ title, hour, minute, second }) => {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\ttitle,\r\n\t\t\t\t\t\t\ttime: hour * 60 * 60 + minute * 60 + second,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\tconst time =\r\n\t\t\t\t\tvideoSection.time.hour * 60 * 60 +\r\n\t\t\t\t\tvideoSection.time.minute * 60 +\r\n\t\t\t\t\tvideoSection.time.second;\r\n\t\t\t\t\treturn { ...videoSection, time, subsections };\r\n\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\t\r\n\t\t\t\ttypedData = { ...(_data as { poem: Poem }).poem, videoSections };\r\n\t\t\t}\r\n\r\n\t\t\tuseEffect(()=>{\r\n\t\t\t\tsetLoading(_loading);\r\n\t\t\t\tsetError(_error);\r\n\t\t\t\tsetPoem(typedData);\r\n\t\t\t},[_loading,_error,_data])\r\n\r\n\t\t\t\r\n\t\t\treturn null;\r\n\t\t};\r\n\t\t","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\ExplanationSectionsContainer\\ExplanationSectionContainer.tsx",[],"C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\PoemScriptBox\\PoemScriptBox.tsx",[],"C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\MainHeader\\MainHeader.tsx",[],"C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\HomepageIntroduction\\HompepageIntroduction.tsx",[],"C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\PoemVideoExplanationExcerpt\\PoemVideoExplanationExcerpt.tsx",[],"C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\Navbar\\Navbar.tsx",[],"C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\NavigationModal\\NavigationModal.tsx",["153"],"import { FC } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { NavlinkData } from \"../MainHeader/MainHeader\";\r\n\r\nimport './NavigationModal.css';\r\nimport NavigationModalItem from \"./NavigationModalItem/NavigationModalItem\";\r\ninterface NavigationModalProps {\r\n  addresses:NavlinkData[]\r\n}\r\n\r\nconst NavigationModal:FC<NavigationModalProps> = props => {\r\n  return createPortal(\r\n  <nav className=\"mobile-navigation-modal\">\r\n    <div className=\"mobile-navigation-modal-controls\">\r\n      <div className=\"mobile-navigation-modal-button close-button\">\r\n        <i className=\"fas fa-times\"></i>\r\n      </div>\r\n    </div>\r\n    <ul className=\"mobile-navlink-list\">\r\n      {props.addresses.map((navlinkData)=>\r\n      <NavigationModalItem title={navlinkData.title} path={navlinkData.path} icon_class={navlinkData.icon_class} key={navlinkData.title}/>\r\n      )}\r\n    </ul>\r\n  </nav>,document.getElementById('modal-root') as Element)\r\n}\r\n\r\nexport default NavigationModal;","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\Backdrop\\Backdrop.tsx",[],"C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\PoemVerse\\PoemVerse.tsx",[],"C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\ExplanationVideoSection\\ExplanationVideoSection.tsx",[],"C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\ExplanationVideoSubsection\\ExplanationVideoSubsection.tsx",[],"C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\pages\\CategoriesPage\\CategoriesPage.tsx",["154","155"],"import { FC } from \"react\";\r\nimport { useGetCategories } from \"../../api/GetCategories\";\r\nimport CategoryList from \"../../components/CategoriesList/CategoriesList\";\r\nimport PageComponent from \"../../components/PageComponent/PageComponent\";\r\n\r\nimport \"./CategoriesPage.css\";\r\n\r\nconst CategoriesPage: FC = () => {\r\n\r\n  const {loading,error,categories:poemVideoExplanationCategories}=useGetCategories();\r\n\r\n  return (\r\n    <PageComponent className=\"categories-page\">\r\n      <div className=\"categories-wrapper\">\r\n        <h1 className=\"categories-title\">دسته بندی ها</h1>\r\n        <section className=\"categories-list-wrapper\">\r\n          <CategoryList poemVideoExplanationCategories={poemVideoExplanationCategories}/>\r\n        </section>\r\n      </div>\r\n    </PageComponent>\r\n  );\r\n};\r\n\r\nexport default CategoriesPage;\r\n","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\CategoriesList\\CategoriesList.tsx",["156"],"import { FC } from \"react\";\r\nimport { cmsURI } from \"../..\";\r\n\r\nimport speech from \"../../assets/photos/speech.jpg\";\r\nimport { PoemVideoExplanationCategory } from \"../../model/PoemVideoExplanationCategories\";\r\n\r\nimport CategoriesListItem from \"../CategoriesListItem/CategoriesListItem\";\r\n\r\nimport \"./CategoriesList.css\";\r\n\r\ninterface CategoriesListPropType{\r\n  poemVideoExplanationCategories:PoemVideoExplanationCategory[]|null\r\n}\r\n\r\nconst CategoryList: FC<CategoriesListPropType> = (props) => {\r\n  return (\r\n    <ul className=\"categories-list\">\r\n      {props.poemVideoExplanationCategories?.map((poemVideoExplanationCategory)=>\r\n      <CategoriesListItem title={poemVideoExplanationCategory.title} id={poemVideoExplanationCategory.id} coverUrl={`${cmsURI}${poemVideoExplanationCategory.cover.url}`}/>\r\n      )}\r\n      {/* <CategoriesListItem title={\"جام جهان نمای حافظ\"} id={\"12\"} coverUrl={''}/> */}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CategoryList;\r\n","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\CategoriesListItem\\CategoriesListItem.tsx",[],"C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\helpers\\getCurrentVideoSubsection.ts",["157"],"import { Section } from \"../model/Section\";\r\nimport { Subsection } from \"../model/Subsection\";\r\n\r\n// function responsible to receive the index of current subsection\r\nexport const getCurrentSubsectionIndex = (\r\n  sections: Section[],\r\n  currentSectionIndex: number,\r\n  secondsPassed: number,\r\n  setCurrentSubsectionIndex: React.Dispatch<React.SetStateAction<number | null>>\r\n): void => {\r\n  // extracting what subsection we are in\r\n  if (sections[currentSectionIndex].subsections && (sections[currentSectionIndex].subsections as Subsection[]).length>0) {\r\n    (sections[currentSectionIndex].subsections as Subsection[]).map(\r\n      (subsection, index) => {\r\n        console.log(`index of current iteration is : ${index}`);\r\n\r\n        const isFirstIteration = index === 0;\r\n        const isLastIteration =\r\n          index ===\r\n          (sections[currentSectionIndex].subsections as Subsection[]).length -\r\n            1;\r\n\r\n        if (isFirstIteration && secondsPassed < subsection.time) {\r\n          // the first subsection is not yet touched\r\n          // null value should be returned as we are on the main section timespan\r\n          console.log(`we are behind the first subsection`);\r\n          setCurrentSubsectionIndex(-1);\r\n        // } else if (\r\n        //   isFirstIteration &&\r\n        //   sections[currentSectionIndex].subsections?.length == 1 &&\r\n        //   !isLastIteration &&\r\n        //   secondsPassed < sections[currentSectionIndex + 1].time\r\n        // ) {\r\n        //   // if it is the first iteration, and the time is not behind of first subsection, then in the other iterations it will be considered\r\n        //   console.log(`the only subsection is the one active`);\r\n        //   setCurrentSubsectionIndex(0);\r\n        } else if (isLastIteration && secondsPassed > subsection.time) {\r\n          // the last subsection must be returned\r\n          console.log(`we are past the last subsection`);\r\n          setCurrentSubsectionIndex(index);\r\n        } else if (\r\n          secondsPassed >\r\n            (sections[currentSectionIndex].subsections as Subsection[])[\r\n              index - 1\r\n            ].time &&\r\n          secondsPassed < subsection.time\r\n        ) {\r\n          console.log(`we are in ${index - 1} subsection`);\r\n          setCurrentSubsectionIndex(index - 1);\r\n        }\r\n      }\r\n    );\r\n  } else {\r\n    console.log(`subsections? what are they?`)\r\n    setCurrentSubsectionIndex(-1);\r\n  }\r\n};\r\n","C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\helpers\\getCurrentVideoSection.ts",[],"C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\model\\Section.ts",[],"C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\api\\GetCategories.tsx",[],"C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\NavigationModal\\NavigationModalItem\\NavigationModalItem.tsx",[],"C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\HomepageCategoryContainer\\HomepageCategoryContainer.tsx",[],"C:\\Users\\me\\Documents\\project\\shaareh\\client\\src\\components\\HomepageCategoriesContainer\\HomepageCategoriesContainer.tsx",[],{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":19,"column":3,"nodeType":"164","messageId":"165","endLine":19,"endColumn":10},{"ruleId":"162","severity":1,"message":"166","line":62,"column":10,"nodeType":"164","messageId":"165","endLine":62,"endColumn":20},{"ruleId":"162","severity":1,"message":"167","line":108,"column":17,"nodeType":"164","messageId":"165","endLine":108,"endColumn":39},{"ruleId":"168","severity":1,"message":"169","line":125,"column":6,"nodeType":"170","endLine":125,"endColumn":17,"suggestions":"171"},{"ruleId":"162","severity":1,"message":"172","line":2,"column":10,"nodeType":"164","messageId":"165","endLine":2,"endColumn":27},{"ruleId":"162","severity":1,"message":"173","line":5,"column":8,"nodeType":"164","messageId":"165","endLine":5,"endColumn":35},{"ruleId":"162","severity":1,"message":"174","line":8,"column":10,"nodeType":"164","messageId":"165","endLine":8,"endColumn":16},{"ruleId":"162","severity":1,"message":"175","line":14,"column":8,"nodeType":"164","messageId":"165","endLine":14,"endColumn":33},{"ruleId":"162","severity":1,"message":"176","line":1,"column":10,"nodeType":"164","messageId":"165","endLine":1,"endColumn":28},{"ruleId":"162","severity":1,"message":"177","line":2,"column":10,"nodeType":"164","messageId":"165","endLine":2,"endColumn":15},{"ruleId":"162","severity":1,"message":"178","line":3,"column":21,"nodeType":"164","messageId":"165","endLine":3,"endColumn":29},{"ruleId":"168","severity":1,"message":"179","line":133,"column":6,"nodeType":"170","endLine":133,"endColumn":29,"suggestions":"180"},{"ruleId":"162","severity":1,"message":"181","line":3,"column":10,"nodeType":"164","messageId":"165","endLine":3,"endColumn":17},{"ruleId":"162","severity":1,"message":"182","line":10,"column":10,"nodeType":"164","messageId":"165","endLine":10,"endColumn":17},{"ruleId":"162","severity":1,"message":"183","line":10,"column":18,"nodeType":"164","messageId":"165","endLine":10,"endColumn":23},{"ruleId":"162","severity":1,"message":"184","line":4,"column":8,"nodeType":"164","messageId":"165","endLine":4,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":14,"column":27,"nodeType":"187","messageId":"188","endLine":14,"endColumn":29},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"@typescript-eslint/no-unused-vars","'Section' is defined but never used.","Identifier","unusedVar","'updateTime' is assigned a value but never used.","'currentSubsectionIndex' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentSection.sectionIndex', 'error', 'loading', and 'poem'. Either include them or remove the dependency array.","ArrayExpression",["191"],"'gregorianToJalali' is defined but never used.","'PoemVideoExplanationExcerpt' is defined but never used.","'cmsURI' is defined but never used.","'HomepageCategoryContainer' is defined but never used.","'BaseSyntheticEvent' is defined but never used.","'error' is defined but never used.","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'setError', 'setLoading', 'setPoem', and 'typedData'. Either include them or remove the dependency array. If 'setLoading' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["192"],"'NavLink' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'speech' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},"Update the dependencies array to be: [currentSection.sectionIndex, error, isPlaying, loading, poem]",{"range":"197","text":"198"},"Update the dependencies array to be: [_loading, _error, _data, setLoading, setError, setPoem, typedData]",{"range":"199","text":"200"},[4174,4185],"[currentSection.sectionIndex, error, isPlaying, loading, poem]",[3090,3113],"[_loading, _error, _data, setLoading, setError, setPoem, typedData]"]